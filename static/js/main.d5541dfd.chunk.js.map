{"version":3,"sources":["Componentes/fichaProducto.js","Componentes/Producto.js","Componentes/carro.js","Componentes/Navegacion.js","App.js","serviceWorker.js","index.js"],"names":["FichaProducto","React","Component","constructor","props","super","this","state","modal","listaCarrito","stock","toggle","bind","agregarCarrito","closeCarro","setState","prevState","push","titulo","precio","actualizarCantidadCarrito","actualizarStock","alert","render","createElement","Container","Button","onClick","Modal","isOpen","ModalHeader","ModalBody","CardImg","src","imagen","descripcion","ModalFooter","className","color","Producto","Col","sm","Card","body","outline","CardBody","CardTitle","CardSubtitle","CardText","Carro","popoverOpen","calcularTotal","reduce","total","producto","parseInt","replace","arregloCarrito","map","i","key","id","class","Badge","length","Popover","target","placement","PopoverHeader","PopoverBody","Table","colSpan","toLocaleString","maximumFractionDigits","Navegacion","Navbar","light","expand","NavbarBrand","href","Nav","navbar","NavItem","NavLink","toggleCarro","cantidadCarrito","console","log","listaProductos","App","arguments","undefined","nuevoStock","_objectSpread","arregloComponentes","precioTotal","fluid","Row","Boolean","window","location","hostname","match","ReactDOM","HashRouter","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5541dfd.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Modal, Container, Button, ModalHeader, ModalBody, ModalFooter, CardImg} from 'reactstrap';\r\nimport './fichaProducto.css';\r\nimport listaCarrito from '../listaCarrito.json';\r\n\r\n\r\nclass FichaProducto extends React.Component{\r\n   //Metodo constructor, antes de renderizar\r\n    constructor(props){\r\n        //metodo super que llama a toda las funciones de la clase que hereda\r\n        super(props);\r\n        this.state={\r\n            modal:false,\r\n            listaCarrito,\r\n            stock: this.props.props.stock\r\n        };\r\n\r\n        //bind hara que los argumentos recibidos por la clase puedan ser compartidos a los demas metodos de la clase\r\n        this.toggle = this.toggle.bind(this);\r\n        this.agregarCarrito = this.agregarCarrito.bind(this);\r\n    }\r\n    toggle(){\r\n       // console.log(this.props)\r\n       if (!this.state.modal){\r\n        this.props.closeCarro();\r\n       }\r\n       this.setState(prevState =>({\r\n            modal: !prevState.modal\r\n       }));\r\n    }\r\n\r\n    agregarCarrito(){\r\n     if(this.props.props.stock>0){\r\n        listaCarrito.push({\r\n            \"titulo\": this.props.props.titulo,\r\n            \"precio\":this.props.props.precio,\r\n        \r\n        });\r\n        this.props.actualizarCantidadCarrito();\r\n        // Actualizamos el stock localmente \r\n        this.setState(prevState => ({ \r\n            stock: prevState.stock - 1 \r\n        }));\r\n\r\n        this.props.actualizarStock(this.props.props.titulo, this.state.stock-1);\r\n\r\n        this.setState(prevState =>({\r\n            modal: !prevState.modal\r\n       }));\r\n     } else{\r\n        alert(\"Stock insuficiente\");\r\n     }\r\n\r\n\r\n    }\r\n\r\n    //boton de reacstrap\r\n    render(){\r\n        return(\r\n            //metodo toggle o accionador del boton. Modal de bootstrap son capas ocultas de DIV que se muestran cuando se preciona en un enlace o boton. isOpen retorna un verdadero o falso que indica si la ventana emergente se muestra o no\r\n            <Container>\r\n                <Button onClick={this.toggle}>Ver ficha</Button>\r\n                \r\n                <Modal isOpen={this.state.modal}>\r\n                   <ModalHeader>{this.props.props.titulo}</ModalHeader>\r\n                   <ModalBody>\r\n                    <CardImg src={this.props.props.imagen}/>\r\n                    <p>El detalle del producto seleccionado es el siguiente: </p>\r\n                    {this.props.props.descripcion}\r\n                    <p>Este producto tiene un valor de <b>{this.props.props.precio}</b> pesos.</p>\r\n                    <p>Hay <b>{this.state.stock}</b> unidades disponibles.</p>\r\n                   </ModalBody>\r\n                   <ModalFooter className='modalFooter'>\r\n                    <Button color='primary' onClick={this.agregarCarrito}>Agregar al carrito</Button>\r\n                    <Button color='secondary' onClick={this.toggle}>Volver atr√°s</Button>\r\n                   </ModalFooter>\r\n                </Modal>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FichaProducto;","import React from 'react';\r\nimport {CardText, Col,CardSubtitle, CardImg,CardTitle,CardBody, Card } from 'reactstrap';\r\nimport './Producto.css';\r\nimport FichaProducto from './fichaProducto';\r\n\r\n\r\n/*\r\nfunction Producto(props){\r\n    return(\r\n        <Col sm=\"4\">\r\n            <Card className=\"Card\" body outline color='primary'>\r\n                <CardImg src={props.imagen}/>\r\n                <CardBody>\r\n                    <CardTitle>{props.titulo}</CardTitle>\r\n                    <CardSubtitle><b>Valor : </b>{props.precio}</CardSubtitle>\r\n                    <CardText>{props.descripcion}\r\n                    </CardText>\r\n                    <Button className='Button'>Comprar</Button>\r\n                    <Button className='Button'>Ver Ficha</Button>\r\n                </CardBody>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\nexport default Producto;\r\n*/\r\n\r\n// En vez de funcion la pasamos a una clase para hacer POO\r\nclass Producto extends React.Component{\r\n    render(){\r\n        return(\r\n            <Col sm=\"4\">\r\n                <Card className=\"Card\" body outline color='primary'>\r\n                    <CardImg src={this.props.imagen}/>\r\n                    <CardBody>\r\n                        <CardTitle>{this.props.titulo}</CardTitle>\r\n                        <CardSubtitle><b>Valor : </b>{this.props.precio}</CardSubtitle>\r\n                        <CardText>{this.props.descripcion}\r\n                        </CardText>\r\n                        <FichaProducto \r\n                        props={this.props} \r\n                        closeCarro={this.props.closeCarro} \r\n                        actualizarCantidadCarrito={this.props.actualizarCantidadCarrito}\r\n                        actualizarStock={this.props.actualizarStock}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Producto;","import React from 'react';\r\nimport {Popover, PopoverHeader, PopoverBody, Table, Badge, Button } from 'reactstrap';\r\nimport listaCarrito from '../listaCarrito';\r\n\r\nclass Carro extends React.Component{\r\n    //Metodo constructor, antes de renderizar\r\n    constructor(){\r\n        //metodo super que llama a toda las funciones de la clase que hereda\r\n        super();\r\n        this.state={\r\n            popoverOpen:false,\r\n            listaCarrito\r\n    \r\n        };\r\n\r\n        //bind hara que los argumentos recibidos por la clase puedan ser compartidos a los demas metodos de la clase\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    toggle(){\r\n       // console.log(this.props)\r\n       this.setState(prevState =>({\r\n            popoverOpen: !prevState.popoverOpen\r\n       }));\r\n    }\r\n\r\n    calcularTotal() {\r\n        return this.state.listaCarrito.reduce((total, producto) => {\r\n            // Convertimos el precio a n√∫mero si viene como string\r\n            const precio = parseInt(producto.precio.replace(/[^0-9]/g, ''));\r\n            return total + precio;\r\n        }, 0);\r\n    }\r\n\r\n    \r\n    render(){\r\n        const total = this.calcularTotal();\r\n\r\n        const arregloCarrito = this.state.listaCarrito.map(\r\n            (listaCarrito,i)=>{\r\n                return(\r\n                    <tr key={i}>\r\n                        <td>{(i+=1)}</td>\r\n                        <td>{listaCarrito.titulo}</td>\r\n                        <td>${listaCarrito.precio}</td>\r\n                    </tr>\r\n                );\r\n            }\r\n        )\r\n        return(\r\n            <div>\r\n                <Button id=\"Popover1\" color=\"secondary\">\r\n                <span class=\"material-icons\">shopping_cart</span>\r\n                    <Badge color=\"warning\">{arregloCarrito.length}</Badge>\r\n                </Button>\r\n                <Popover target=\"Popover1\" placement=\"bottom\" isOpen={this.state.popoverOpen} toggle={this.toggle}>\r\n                    <PopoverHeader>Lista de Compras</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Producto</th>\r\n                                    <th>Precio</th>\r\n                                </tr>\r\n                            </thead>\r\n                                <tbody>\r\n                                    {arregloCarrito}\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <th colSpan=\"2\">Total:</th>\r\n                                    <td><strong>${total.toLocaleString('es-CL', { maximumFractionDigits: 0 })}</strong></td>\r\n\r\n                                   \r\n                                </tr>\r\n                            </tfoot>\r\n                        </Table>\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Carro;","import React from 'react';\r\nimport {NavItem, NavLink, Nav, NavbarBrand, Navbar} from 'reactstrap'\r\nimport Carro from './carro'\r\n\r\nclass Navegacion extends React.Component{\r\n    render(){\r\n        return(\r\n            <Navbar color='warning' light expand=\"md\">\r\n                <NavbarBrand href='/'>{this.props.titulo}</NavbarBrand>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href='/'>Acerca de</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href='/'>Nuestros Productos</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href='/'>Contactanos</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Carro popoverOpen={this.props.popoverOpen} toggleCarro={this.props.toggleCarro} cantidadCarrito={this.props.cantidadCarrito}/>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Navegacion;","import React from 'react';\nimport {Container, Row} from 'reactstrap';\nimport './App.css';\nimport Producto from './Componentes/Producto';\nimport Navegacion from './Componentes/Navegacion';\nimport listaProductos from './listaProductos.json';\n\n/*\nfunction App() {\n  return (\n    <Container>\n      <Row>\n      <Producto\n        titulo=\"Headphone Purple\"\n        imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n        descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n        precio=\"24.390\"\n      />\n      <Producto\n        titulo=\"Headphone Purple\"\n        imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n        descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n        precio=\"24.390\"\n      />\n      <Producto\n        titulo=\"Headphone Purple\"\n        imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n        descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n        precio=\"24.390\"\n      />\n      <Producto\n        titulo=\"Headphone Purple\"\n        imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n        descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n        precio=\"24.390\"\n      />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n*/\n//Cambiamos a POO\nconsole.log(listaProductos);\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      popoverOpen: false,\n      listaProductos,\n      cantidadCarrito:0\n    };\n    this.toggleCarro= this.toggleCarro.bind(this);\n    this.actualizarCantidadCarrito=this.actualizarCantidadCarrito.bind(this);\n    this.actualizarStock=this.actualizarStock.bind(this);\n  }\n\n  actualizarCantidadCarrito(){\n    this.setState(prevState=>({\n      cantidadCarrito: prevState.cantidadCarrito+1\n    }));\n  }\n\n  toggleCarro(state=null){\n    this.setState(prevState =>({\n      popoverOpen: state !== null ? state:!prevState.popoverOpen\n    }));\n  }\n\n  actualizarStock(titulo, nuevoStock) { \n    this.setState(prevState => ({ \n      listaProductos: prevState.listaProductos.map(producto => \n        producto.titulo === titulo ? { ...producto, stock: nuevoStock } : producto ) })); }\n/* ELIMINAMOS PARA PASAR LOS DATOS POR JSON\n    render(){\n    return (\n      <Container>\n        <Navegacion titulo=\"Mi primer sitio de compras en React\"/>\n        <Row>\n          \n          <Producto\n            titulo=\"Headphone Purple\"\n            imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n            descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n            precio=\"24.390\"\n          />\n          <Producto\n            titulo=\"Headphone Purple\"\n            imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n            descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n            precio=\"24.390\"\n          />\n          <Producto\n            titulo=\"Headphone Purple\"\n            imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n            descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n            precio=\"24.390\"\n          />\n          <Producto\n            titulo=\"Headphone Purple\"\n            imagen=\"https://image.freepik.com/vector-gratis/ilustracion-icono-auriculares_17146-29.jpg\"\n            descripcion=\"Audifonos Alta calidad de sonido, HD Sonido Envolvente\"\n            precio=\"24.390\"\n          />\n        </Row>\n      </Container>\n    );\n  } */\n\n\n    render(){\n      const arregloComponentes = this.state.listaProductos.map(\n        (listaProductos,i)=>{\n          return(\n            <Producto\n            key={i}\n            titulo={listaProductos.titulo}\n            imagen={listaProductos.imagen}\n            descripcion={listaProductos.descripcion}\n            precio={listaProductos.precio}\n            stock={listaProductos.stock}\n            closeCarro={()=>this.toggleCarro(false)}\n            actualizarCantidadCarrito={this.actualizarCantidadCarrito}\n            precioTotal={(+listaProductos.precio)}\n            actualizarStock={this.actualizarStock}\n            />\n          )\n        }\n      );\n    return (\n      <Container fluid>\n        <Navegacion titulo=\"E-Cart\"\n        popoverOpen={this.state.popoverOpen} \n        toggleCarro={this.toggleCarro}\n        cantidadCarrito={this.state.cantidadCarrito}\n        />\n        <Container>\n        <Row>\n          {arregloComponentes}\n        </Row>\n        </Container>\n      </Container>\n    );\n  } \n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter basename=\"/ecommerse-Front-React\">\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}